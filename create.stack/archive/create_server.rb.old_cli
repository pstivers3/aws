#!/usr/bin/env ruby

# uses AWS CLI 1.4.2 API definition

usage = "#{$0} <stack folder name>"
example = "#{$0} stg"

stack_folder = ARGV[0]
help_state = ARGV[0]

# If help_state=help, provide help information.
if help_state == 'help'
    puts "\n usage: #{usage} \n example: #{example} \n\n"
    exit 0
end

# paths
home = "/home/paul"
stack_path = "#{home}/hs-git/aws/create.stack/stack.configs"

# Check that all the config files exist.
system("./check-files.sh #{stack_folder} #{stack_path}")
# If the called script exits with non-zero exit status, then also exit this script.
exit($?.to_i) if $?.exitstatus != 0

# source configuration constants
eval File.read("#{stack_path}/#{stack_folder}/aws.conf")
eval File.read("aws.conf.global")
system("source #{home}/ec2.env")

File.readlines("#{stack_path}/#{stack_folder}/servers.conf").each do |line| # read one line at a time
  data=line.split(/\s+/) # split the line into an array

  tier_name = data[0]
  server_name= "#{STACK}-#{tier_name}-01"
  server_size = data[1]
  ami_name = data[2]
  sg_name_1 = data[3]
  sg_name_2 = data[4]

  puts "\n==> Getting the base AMI for the #{tier_name} server"
  sg_id_1 = %x[ec2-describe-group --region #{REGION} --filter 'group-name=#{sg_name_1}' | egrep ^GROUP | awk '{ print $2 }'].chomp
  sg_id_2 = %x[ec2-describe-group --region #{REGION} --filter 'group-name=#{sg_name_2}' | egrep ^GROUP | awk '{ print $2 }'].chomp

  ami_id = %x[ec2-describe-images --region #{REGION} --filter "name=#{ami_name}" | egrep ^IMAGE | awk '{ print $2 }'].chomp

  # if the server AMI can not be found, notify the user and exit.
  if ami_id.empty?
    puts "\nThe #{tier_name} server AMI could not be found."
    puts "Please double check the AMI name in servers.conf\n\n"
    exit(1)
  end

  puts "\n#{tier_name} server AMI name:  #{ami_name}"
  puts "#{tier_name} server AMI:       #{ami_id}"
  puts "#{tier_name} server size:      #{server_size}"

  # Create the server/s and make name tags
  puts "\n==> Creating the #{tier_name} server"
  puts "==> Making name tags"

  instance_id = %x[ec2run --region #{REGION} #{ami_id} -k #{RSA_KEY} -g #{sg_id_1} -g #{sg_id_2} -t #{server_size} -z #{AZ} --subnet #{SUBNET} --associate-public-ip-address true | egrep ^INSTANCE | awk '{ print $2 }'].chomp

  puts %x[ec2-create-tags --region #{REGION} #{instance_id} --tag Name="#{server_name}"]
  puts AZ
end

puts "\n===== The servers have been created in AZ #{AZ} and #{SUBNET} =====\n\n"

exit 0

